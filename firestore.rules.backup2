rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for authorization
    function uid() {
      return request.auth.uid;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isPro() {
      return isSignedIn() && request.auth.token.role == 'PRO';
    }
    
    function isStaff() {
      return isSignedIn() && request.auth.token.role == 'STAFF';
    }
    
    function isAthlete() {
      return isSignedIn() && request.auth.token.role == 'ATHLETE';
    }
    
    function isProOrStaff() {
      return isPro() || isStaff();
    }
    
    function isTeamMember() {
      return isProOrStaff() || isAthlete();
    }
    
    function proId() {
      return request.auth.token.proId;
    }

    // Users collection - all authenticated users can read their own data
    match /users/{userId} {
      allow read: if isSignedIn() && (
        uid() == userId || // User can read their own data
        (isProOrStaff() && proId() == resource.data.proId) || // PRO/STAFF can read any team member where proId matches theirs
        (isAthlete() && proId() == resource.data.proId) || // ATHLETE can read roster of their team (same proId)
        (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can read team member data
      );
      allow write: if isSignedIn() && uid() == userId; // Only self-write
      
      // User's chats subcollection
      match /chats/{chatId} {
        allow read, write: if isSignedIn() && (
          uid() == userId || // User owns their chats
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can access team member chats
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can access chats
        );
        
        // Messages within user's chats
        match /messages/{messageId} {
          allow read: if isSignedIn() && (
            uid() == userId || // User owns their chat messages
            (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team messages
            (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read messages
          );
          allow create: if isSignedIn() && (
            uid() == userId || // User can create messages in their chats
            (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can send messages
            (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can send messages
          );
          allow update, delete: if false; // Messages are immutable
        }
      }
      
      // User's events subcollection
      match /events/{eventId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their events
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team events
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read events
        );
        allow create, update: if isSignedIn() && (
          uid() == userId || // User can manage their events
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can manage team events
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can manage events
        );
        allow delete: if isSignedIn() && (
          uid() == userId || // User can delete their events
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can delete team events
          (resource.data.createdBy == uid()) // Creator can delete their events
        );
      }
      
      // User's programs subcollection
      match /programs/{programId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their programs
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team programs
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read programs
        );
        allow create, update, delete: if isSignedIn() && (
          uid() == userId || // User can manage their programs
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can manage team programs
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can manage programs
        );
      }
      
      // User's program templates subcollection
      match /program_templates/{templateId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their templates
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team templates
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read templates
        );
        allow create, update, delete: if isSignedIn() && (
          uid() == userId || // User can manage their templates
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can manage team templates
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can manage templates
        );
      }
      
      // User's exercises subcollection
      match /exercises/{exerciseId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their exercises
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team exercises
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read exercises
        );
        allow create, update, delete: if isSignedIn() && (
          uid() == userId || // User can manage their exercises
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can manage team exercises
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can manage exercises
        );
      }
      
      // User's training packages subcollection
      match /trainingPackages/{packageId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their packages
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team packages
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read packages
        );
        allow create, update, delete: if isSignedIn() && (
          uid() == userId || // User can manage their packages
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can manage team packages
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can manage packages
        );
      }
      
      // User's package purchases subcollection
      match /packagePurchases/{purchaseId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their purchases
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team purchases
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read purchases
        );
        allow create, update: if isSignedIn() && (
          uid() == userId || // User can manage their purchases
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can manage team purchases
        );
        allow delete: if false; // No deletions allowed
      }
      
      // User's payments subcollection
      match /payments/{paymentId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their payments
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can read team payments
        );
        allow write: if false; // Only via Functions/webhooks
      }
      
      // User's availability slots subcollection
      match /availabilitySlots/{slotId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their availability
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team availability
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read availability
        );
        allow create, update: if isSignedIn() && (
          uid() == userId || // User can manage their availability
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can manage team availability
        );
        allow delete: if isSignedIn() && (
          uid() == userId || // User can delete their availability
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can delete team availability
        );
      }
      
      // User's availability templates subcollection
      match /availabilityTemplates/{templateId} {
        allow read: if isSignedIn() && (
          uid() == userId || // User owns their templates
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) || // PRO can read team templates
          (isProOrStaff() && proId() == get(/databases/$(database)/documents/users/$(userId)).data.proId) // Team members can read templates
        );
        allow create, update, delete: if isSignedIn() && (
          uid() == userId || // User can manage their templates
          (isPro() && get(/databases/$(database)/documents/users/$(userId)).data.proId == uid()) // PRO can manage team templates
        );
      }
    }

    // Teams collection - one team per PRO
    match /teams/{teamId} {
      allow read: if isSignedIn() && (
        (isTeamMember() && proId() == teamId) || // Team members can read their team
        (isPro() && uid() == teamId) // PRO can read their own team
      );
      allow write: if isSignedIn() && isPro() && uid() == teamId; // Only PRO can manage their team
    }

    // Invites collection - opaque to clients
    match /invites/{inviteId} {
      allow read: if false; // completely opaque
      allow write: if false; // only managed by Functions
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
